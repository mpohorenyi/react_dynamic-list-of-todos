{"version":3,"sources":["types/Filter.ts","api.ts","Store.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","reducer","state","action","type","todos","payload","filteredTodos","todoModal","loadingTodos","filterAndSearchTodos","filter","todo","Active","completed","Completed","All","search","title","toLocaleLowerCase","includes","trim","toLowerCase","initialState","StateContext","React","createContext","DispatchContext","GlobalStateProvider","children","useReducer","dispatch","useEffect","finally","Provider","value","TodoItem","id","useContext","className","cn","onClick","TodoList","map","TodoFilter","useState","setFilter","setSearch","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","loading","setLoading","userId","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f148a2f8.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useReducer } from 'react';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { getTodos } from './api';\n\ntype Action =\n| { type: 'loadTodos', payload: Todo[] }\n| { type: 'setTodoModal', payload: Todo | null }\n| { type: 'toggleLoadingTodos' }\n| { type: 'filterAndSearchTodos'; filter: Filter; search: string };\n\ninterface State {\n  todos: Todo[];\n  filteredTodos: Todo[];\n  loadingTodos: boolean;\n  todoModal: Todo | null;\n}\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'loadTodos':\n      return {\n        ...state,\n        todos: action.payload,\n        filteredTodos: action.payload,\n      };\n\n    case 'setTodoModal':\n      return {\n        ...state,\n        todoModal: action.payload,\n      };\n\n    case 'toggleLoadingTodos':\n      return {\n        ...state,\n        loadingTodos: !state.loadingTodos,\n      };\n\n    case 'filterAndSearchTodos': {\n      let filterAndSearchTodos = [...state.todos];\n\n      filterAndSearchTodos = filterAndSearchTodos.filter(todo => {\n        switch (action.filter) {\n          case Filter.Active:\n            return !todo.completed;\n\n          case Filter.Completed:\n            return todo.completed;\n\n          case Filter.All:\n          default:\n            return true;\n        }\n      });\n\n      if (action.search) {\n        filterAndSearchTodos = filterAndSearchTodos.filter(todo => {\n          return todo.title\n            .toLocaleLowerCase().includes(action.search.trim().toLowerCase());\n        });\n      }\n\n      return {\n        ...state,\n        filteredTodos: filterAndSearchTodos,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst initialState: State = {\n  todos: [],\n  filteredTodos: [],\n  loadingTodos: false,\n  todoModal: null,\n};\n\nexport const StateContext = React.createContext(initialState);\n// eslint-disable-next-line max-len\nexport const DispatchContext = React.createContext<React.Dispatch<Action>>(() => {});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const GlobalStateProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    dispatch({ type: 'toggleLoadingTodos' });\n    getTodos()\n      .then(todos => dispatch({ type: 'loadTodos', payload: todos }))\n      .finally(() => dispatch({ type: 'toggleLoadingTodos' }));\n  }, []);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { DispatchContext, StateContext } from '../../Store';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const dispatch = useContext(DispatchContext);\n  const { todoModal } = useContext(StateContext);\n\n  const handleModal = () => {\n    dispatch({ type: 'setTodoModal', payload: todo });\n  };\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">\n        {id}\n      </td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleModal}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye': todoModal?.id !== id,\n                'fa-eye-slash': todoModal?.id === id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useContext, useState } from 'react';\nimport { DispatchContext } from '../../Store';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoFilter = () => {\n  const dispatch = useContext(DispatchContext);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [search, setSearch] = useState('');\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as Filter);\n    dispatch({\n      type: 'filterAndSearchTodos',\n      filter: event.target.value as Filter,\n      search,\n    });\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n    dispatch({\n      type: 'filterAndSearchTodos',\n      filter,\n      search: event.target.value,\n    });\n  };\n\n  const clearSearchField = () => {\n    setSearch('');\n    dispatch({\n      type: 'filterAndSearchTodos',\n      filter,\n      search: '',\n    });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {search && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearchField}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { DispatchContext, StateContext } from '../../Store';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const { todoModal } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (todoModal) {\n      setLoading(true);\n      getUser(todoModal.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [todoModal]);\n\n  const closeModal = () => {\n    dispatch({ type: 'setTodoModal', payload: null });\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoModal?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoModal?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={cn({\n                  'has-text-danger': !todoModal?.completed,\n                  'has-text-success': todoModal?.completed,\n                })}\n              >\n                {`${todoModal?.completed ? 'Done' : 'Planned'}`}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { StateContext } from './Store';\n\nexport const App: React.FC = () => {\n  const { loadingTodos, filteredTodos, todoModal } = useContext(StateContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loadingTodos ? (\n                <Loader />\n              ) : (\n                <TodoList todos={filteredTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoModal && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalStateProvider } from './Store';\n\nReactDOM.render(\n  <GlobalStateProvider>\n    <App />\n  </GlobalStateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}